version: "3"
services:
  reverseproxy:
    image: nginx:1.17
    networks:
      - stable-coin-network
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/extras:/etc/nginx/extras
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    logging:
      driver: awslogs
      options:
        awslogs-group: StableCoin_PROD_logs
        awslogs-stream: reverseproxy_service_logs

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes: 
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  mongo:
    image: mongo:5.0 
    networks:
      - stable-coin-network
    restart: always
    env_file:
      - ./.env/mongo.env
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodata:/data/db

  frontend:
    image: frontend:latest 
    networks:
      - stable-coin-network
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: StableCoin_PROD_logs
        awslogs-stream: frontend_service_logs

  admin:
    image: admin:latest
    networks:
      - stable-coin-network
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: StableCoin_PROD_logs
        awslogs-stream: admin_service_logs
        
  backend:
    image: hedgebackend:latest 
    networks:
      - stable-coin-network
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: dex-screener-stage-logs
        awslogs-stream: dex-screener-stage-backend

networks:
  stable-coin-network:
